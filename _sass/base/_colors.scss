@mixin transition {
  transition: all 300ms cubic-bezier(0.075, 0.82, 0.165, 1);
}

:root {
  $color-bg: #fbfbfb;
  $color-primary: #3476e2;

  --color-bg: #{$color-bg};
  --color-bg-secondary: #{darken($color-bg, 5%)};
  --color-primary: #{$color-primary};
  --color-primary-accent: #{transparentize($color-primary, 0.7)};
  --color-text: #283149;
  --active-brightness: 1.2;
  --hover-brightness: 0.7;

  --color-code-red: #ca1243;
  --color-code-blue: #4078f2;
  --color-code-yellow: #c18401;
  --color-code-purple: #a626a4;
  --color-code-orange: #d75f00;
  --color-code-green: #50a14f;
  --color-code-gray: #a0a1a7;
}

:root[data-theme="dark"] {
  $color-bg: #283149;
  $color-primary: #8db6f7;

  --color-bg: #{$color-bg};
  --color-bg-secondary: #{lighten($color-bg, 5%)};
  --color-primary: #{$color-primary};
  --color-primary-accent: #{transparentize($color-primary, 0.7)};
  --color-text: #fbfbfb;
  --active-brightness: 0.8;
  --hover-brightness: 1.2;

  --color-code-red: #ff5370;
  --color-code-blue: #82aaff;
  --color-code-yellow: #ffcb6b;
  --color-code-purple: #c792ea;
  --color-code-orange: #f78c6c;
  --color-code-green: #c3e88d;
  --color-code-gray: #676e95;
}

// need to use an iterator on the following selectors since selecting multiple
// items at once doesn't work for some reason.
@each $selector in "-moz-selection", "selection" {
  ::#{$selector} {
    background: var(--color-primary-accent);
  }

  a::#{$selector} {
    background: var(--color-primary-accent);
  }
}

::-webkit-scrollbar-track {
  background: var(--color-bg-secondary);
}

::-webkit-scrollbar-thumb {
  background: var(--color-primary-accent);

  &:hover {
    background: var(--color-primary);
  }

  &:active {
    background: var(--color-primary-accent);
  }
}

body {
  background: var(--color-bg);
  color: var(--color-text);

  // for SVGs, too tired to think about unintended consequences
  fill: var(--color-text);
}

a {
  color: var(--color-primary);
  @include transition;

  &:visited {
    color: var(--color-primary);
  }

  &:hover {
    filter: brightness(var(--hover-brightness));
  }

  &:active {
    filter: brightness(var(--active-brightness));
  }

  &:focus {
    outline: thin dotted;
  }
}

code,
kbd,
samp {
  background: var(--color-bg-secondary);
}

code {
  .hljs,
  .hljs-subst {
    color: var(--color-text);
  }

  .hljs-attribute,
  .hljs-bullet,
  .hljs-class,
  .hljs-function,
  .hljs-keyword,
  .hljs-meta-keyword,
  .hljs-selector-pseudo,
  .hljs-tag,
  .hljs-deletion,
  .hljs-formula,
  .hljs-link,
  .hljs-selector-tag {
    color: var(--color-code-red);
  }

  .hljs-emphasis,
  .hljs-name,
  .hljs-quote,
  .hljs-strong,
  .hljs-title,
  .hljs-variable {
    color: var(--color-code-blue);
  }

  .hljs-attr,
  .hljs-params,
  .hljs-template-tag,
  .hljs-type {
    color: var(--color-code-yellow);
  }

  .hljs-builtin-name,
  .hljs-built_in,
  .hljs-doctag,
  .hljs-literal,
  .hljs-number,
  .hljs-link_label {
    color: var(--color-code-purple);
  }

  .hljs-code,
  .hljs-meta,
  .hljs-regexp,
  .hljs-selector-id,
  .hljs-template-variable {
    color: var(--color-code-orange);
  }

  .hljs-addition,
  .hljs-meta-string,
  .hljs-section,
  .hljs-selector-attr,
  .hljs-selector-class,
  .hljs-string,
  .hljs-symbol {
    color: var(--color-code-green);
  }

  .hljs-comment {
    color: var(--color-code-gray);
  }
}

blockquote {
  background: var(--color-bg-secondary);
  border-color: var(--color-primary-accent);
}

table {
  border-color: var(--color-primary-accent);

  thead {
    background: var(--color-primary-accent);
  }

  tr:nth-child(even) {
    background: var(--color-bg-secondary);
  }

  td,
  th {
    border-color: var(--color-primary-accent);
  }
}

hr {
  border-color: var(--color-text);
  opacity: 0.25;
}

mark {
  background: var(--color-bg-secondary);
}
