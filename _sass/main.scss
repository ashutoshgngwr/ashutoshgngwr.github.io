@import "base/mq-helper";
@import "base/normalize";
@import "base/layout";
@import "base/typography";
@import "base/colors";
@import "base/print";

.enforce-max-content-width {
  box-sizing: border-box;
  max-width: 38rem;
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}

label.switch {
  display: block;
  padding: 0.5rem;
  font-size: 0; // clicking on the label is selecting whitespace (text) in firefox
  border-radius: 50%;
  transition: all 500ms cubic-bezier(0.075, 0.82, 0.165, 1);

  &:hover {
    color: var(--color-primary-variant);
  }

  &:active {
    background: var(--color-bg-secondary);
    color: var(--color-primary);
  }

  svg {
    display: block;
    width: 1rem;
    height: 1rem;
  }

  input {
    display: none;

    ~ svg:last-of-type {
      display: none;
    }

    &:checked {
      ~ svg {
        &:last-of-type {
          display: block;
        }

        &:first-of-type {
          display: none;
        }
      }
    }
  }
}

pre div.view-file {
  @include font-family-sans-serif;
  text-align: right;
}

svg.icon {
  width: 1em;
  height: 1em;
  vertical-align: middle;
}

header.page-header {
  position: sticky;
  top: 0;
  z-index: 1;
  background: var(--color-bg);
  box-sizing: border-box;

  display: flex;
  flex-direction: column;

  min-height: 0;
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
  border-bottom: 0rem solid var(--color-bg);
  transition: padding 0.75s cubic-bezier(0.075, 0.82, 0.165, 1),
    border-bottom 0.75s cubic-bezier(0.075, 0.82, 0.165, 1),
    min-height 0.75s cubic-bezier(0.075, 0.82, 0.165, 1) 0.2s; // in sync with menu

  @media print {
    position: static;
    box-shadow: none;
    border-bottom: 0.1rem solid var(--color-text);
  }

  &.floating {
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
    border-bottom: 0.05rem solid var(--color-bg-tertiary);
  }

  &.expanded {
    min-height: 100vh;
    transition-delay: 0s, 0.5s, 0s;

    @media print {
      min-height: auto;
    }
  }

  #navbar {
    display: flex;
    flex-direction: row;
    align-items: center;

    a.title {
      color: var(--color-text);
      letter-spacing: 0.05rem;
      margin-right: 1rem;

      @include font-family-serif;
      font-weight: 400;
      font-size: 1.25rem;

      &:hover {
        color: var(--color-primary);
      }

      &:active {
        color: var(--color-primary-variant);
      }
    }

    label.switch {
      margin-left: 0.5rem;
      justify-self: end;

      &:first-of-type {
        margin-left: auto;
      }

      @media print {
        display: none;
      }
    }

    #expand-menu {
      color: var(--color-primary-variant);

      &:hover {
        color: var(--color-primary);
      }
    }
  }

  .menu {
    display: flex;
    flex-direction: column;
    align-items: center;

    max-height: 0;
    transform: scaleY(0);
    transform-origin: top;
    // in sync with header height expansion. On reveal, we wait to let the
    // header expand a bit. On collapse, the header waits a bit before shrinking
    // its height, to let the menu disappear before rolling up the curtain.
    transition: all 0.3s cubic-bezier(0.075, 0.82, 0.165, 1) 0s;

    @media print {
      display: none;
    }

    ul {
      margin-top: 0;

      li {
        margin: 0.2rem auto;
      }
    }
  }

  &.expanded .menu {
    max-height: auto;
    transition-delay: 0.4s;
    transform: scaleY(1);
  }
}

main {
  margin: 2rem auto;

  %heading-anchor-style {
    margin-left: 0.5rem;
    font-size: 0.9em;
    vertical-align: middle;

    @media print {
      display: none !important;
    }
  }

  @for $i from 2 through 6 {
    h#{$i} {
      a.anchor {
        @extend %heading-anchor-style;
      }
    }
  }

  article.post {
    div.meta {
      display: flex;
      flex-direction: row;
      color: var(--color-text-secondary);

      small:first-of-type {
        margin-right: auto;
      }
    }
  }
}

body > footer {
  margin-bottom: 1rem;
  display: flex;
  flex-direction: row-reverse;
  align-items: center;

  @include breakpoint($until: mobile) {
    flex-direction: column;
  }

  @media print {
    display: none;
  }

  p.copyright {
    margin-right: auto;

    @include breakpoint($until: mobile) {
      margin-right: 0;
    }
  }

  p.social-icons {
    display: flex;
    margin-left: auto;

    @include breakpoint($until: mobile) {
      margin-left: 0;
    }

    a {
      margin-right: 0.5em;
      color: inherit;
      font-size: 1.25rem; // for icon class

      // since devices with lower resolution will typically use an imprecise
      // pointing device such as fingers on touchscreens
      @include breakpoint($until: desktop) {
        font-size: 1.5rem; // for icon class
      }

      &:last-child {
        margin-right: 0;
      }

      &:hover {
        color: var(--color-primary);
      }

      &:active {
        color: var(--color-primary-variant);
      }
    }
  }
}
